/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package io.kleros.alphawallet.curate.android.service;

import java.io.*;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.annotations.SerializedName;
import io.kleros.alphawallet.curate.android.entity.AddressInformation;
import okhttp3.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;


public class KlerosCurateService
{
    private static final Logger LOGGER = LoggerFactory.getLogger(KlerosCurateService.class);
    private static final String IPFS_BASE_URL = "https://ipfs.kleros.io";
    private static final String CURATE_ETHEREUM_GRAPH_URL = "https://api.thegraph.com/subgraphs/name/kleros/curate";
    private static final MediaType JSON = MediaType.get("application/json; charset=utf-8");
    private static final String ADDRESS_TOKEN = "_ADDRESS_";
    private static final String CURATE_QUERY = "{ litems( where: {registry: \"0x6e31d83b0c696f7d57241d3dffd0f2b628d14c67\", status: Registered, keywords_contains: \"" + ADDRESS_TOKEN + "\"} ) { keywords data } }";
    private final OkHttpClient httpClient;
    private final Gson gson;

    public KlerosCurateService(OkHttpClient httpClient)
    {
        this.httpClient = httpClient;
        this.gson = new GsonBuilder().create();
    }

    public AddressInformation request(String address) throws IOException
    {
        GraphResponse graphResponse = queryTheGraph(address);
        String ipfsCid = graphResponse.data.litems[0].data;
        LOGGER.debug("ipfsCid: {}", ipfsCid);

        String ipfsUrl = IPFS_BASE_URL + ipfsCid;
        IpfsItem ipfsItem = requestIpfsItem(httpClient, ipfsUrl);
        LOGGER.debug("IpfsItemValues: {}", ipfsItem.values);

        return new AddressInformation(ipfsItem.values.publicNameTag,
                ipfsItem.values.contractAddress,
                ipfsItem.values.uiWebsiteLink,
                ipfsItem.values.publicNote);
    }

    private GraphResponse queryTheGraph(String address) throws IOException
    {
        GraphQuery query = new GraphQuery(CURATE_QUERY.replace(ADDRESS_TOKEN, address));
        String json = gson.toJson(query);
        LOGGER.debug(json);
        RequestBody body = RequestBody.Companion.create(json, JSON);

        Request request = new Request.Builder().url(CURATE_ETHEREUM_GRAPH_URL)
                .post(body)
                .build();

        GraphResponse graphResponse;
        try (Response response = httpClient.newCall(request).execute())
        {
            LOGGER.debug(response.toString());

            String responseBody = response.body().string();
            LOGGER.debug(responseBody);
            graphResponse = gson.fromJson(responseBody, GraphResponse.class);
        }
        return graphResponse;
    }

    private IpfsItem requestIpfsItem(OkHttpClient client, String ipfsUrl) throws IOException
    {
        Request request = new Request.Builder().url(ipfsUrl).build();
        IpfsItem ipfsItem;
        try (Response response = client.newCall(request).execute())
        {
            LOGGER.debug("Response: {}", response);

            String body = response.body().string();
            LOGGER.debug("ResponseBody: {}", body);
            ipfsItem = gson.fromJson(body, IpfsItem.class);
        }
        return ipfsItem;
    }
}

class GraphQuery
{
    public String query;

    public GraphQuery(String query)
    {
        this.query = query;
    }
}

class GraphResponse
{
    public LItems data;

    static class LItems
    {
        public LItem[] litems;

        static class LItem
        {
            public String keywords;
            public String data;
        }
    }
}

class IpfsItem
{
    public IpfsItemValues values;

    static class IpfsItemValues
    {
        @SerializedName("Public Name Tag")
        public String publicNameTag;

        @SerializedName("Contract Address")
        public String contractAddress;

        @SerializedName("UI/Website Link")
        public String uiWebsiteLink;

        @SerializedName("Public Note")
        public String publicNote;

        @Override
        public String toString()
        {
            return "IpfsItemValues{"
                    + "publicNameTag='"
                    + publicNameTag + '\''
                    + ", contractAddress='"
                    + contractAddress + '\''
                    + ", uiWebsiteLink='"
                    + uiWebsiteLink + '\''
                    + ", publicNote='"
                    + publicNote + '\''
                    + '}';
        }
    }
}


